# -*- coding: utf-8 -*-
"""FlyBy from Stanford National Security

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1thvPvLeCYXIwLSrjlVcn6dJRUunpTmLc
"""

# sample drone location data -> predict where the drone is going
# given some radius and from a bomb shell output with simulation

from google.colab import files
uploaded = files.upload()

import pandas as pd
df_original = pd.read_csv('HackathonOutput.csv')

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

df = df_original.copy()
df['SensorTime'] = pd.to_datetime(df['SensorTime'], format='mixed')
df = df.dropna(subset=['SensorTime'])

df.sort_values('SensorTime', inplace=True)

print(df)

id_counts = df['HashedDroneId'].value_counts()

# Get the Drone ID with the most data points
most_common_id = id_counts.idxmax()

# Print the most common Drone ID and its count
print("Drone ID with the most data points:", most_common_id)
print("Number of data points:", id_counts[most_common_id])

unique_drone_types = df['DroneType'].unique()

# Print the unique drone types
print("Unique Drone Types:")
for drone_type in unique_drone_types:
    print(drone_type)

# lets choose some specific drone from skyfi

specific_drone_id = '4797c87643d9f03e8d625ff393cf26a8'
filtered_df = df[df['HashedDroneId'] == specific_drone_id]

print(filtered_df)



pip install folium

import folium

df_drone = filtered_df.head(1000)

# Create a map centered around the average location in your filtered data
average_latitude = df_drone['DetectionLatitude'].mean()
average_longitude = df_drone['DetectionLongitude'].mean()
drone_map = folium.Map(location=[average_latitude, average_longitude], zoom_start=12)

# Add points to the map
for idx, row in df_drone.iterrows():
    folium.Marker(
        location=[row['DetectionLatitude'], row['DetectionLongitude']],
        popup=f"Time: {row['SensorTime']}\nAltitude: {row['Altitude']}m",
        icon=folium.Icon(color='blue', icon='info-sign')
    ).add_to(drone_map)

# Show the map
drone_map